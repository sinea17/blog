import{_ as i,p as e,q as l,a1 as o}from"./framework-5866ffd3.js";const c={},t=o(`<h1 id="git-操作笔记" tabindex="-1"><a class="header-anchor" href="#git-操作笔记" aria-hidden="true">#</a> Git 操作笔记</h1><ul><li>克隆 <code>git clone {remote url}</code></li><li>配置信息<div class="language-base line-numbers-mode" data-ext="base"><pre class="language-base"><code>git config --global user.email &quot;你的邮箱&quot;
git config --global user.name &quot;你的名字&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>跟踪 <code>git add {文件名,如 abc.txt}</code>（添加到暂存区）</li><li>取消跟踪 <code>git reset HEAD {文件名}</code></li><li>查看暂存 <code>git status</code></li><li>生成版本 <code>git commit -m &quot;备注&quot;</code>（记录一个版本，并清空跟踪文件列表）</li><li>查看 remote url <code>git remote -v</code>（如果地址是 git 开头则表示是 git 协议）</li><li>撤销修改 <code>git checkout -- {文件名}</code>（未跟踪）</li><li>撤销新建文件 <code>git clean -f {文件名}</code></li><li>撤销新建文件夹 <code>git clean -df {文件夹名}</code></li><li>查看日志 <code>git log</code></li><li>分支操作 <ul><li>查看分支 <code>git branch</code></li><li>查看本地和远程分支 <code>git branch -a</code></li><li>创建分支 <code>git branch {分支名}</code></li><li>切换分支 <code>git checkout {分支名}</code></li><li>创建并切换分支 <code>git checkout -b {分支名}</code></li><li>删除分支 <code>git branch -D {分支名}</code>（先切换到其他分支）</li><li>合并分支到当前分支 <code>git merge {分支名}</code></li><li>上传分支 <code>git push origin {分支名}</code></li><li>下拉分支 <code>git pull origin {分支名}</code></li></ul></li><li>版本 <ul><li>查看以往版本号 <code>git reflog</code>（本地的 commit）</li><li>回退至上一个版本 <code>git reset --hard HEAD</code></li><li>回退至指定版本 <code>git reset --hard HEAD@{5}</code></li></ul></li><li>标签 <ul><li>查看所有标签 <code>git tag</code>（按字母排序）</li><li>查看标签 <code>git show {标签名}</code></li><li>创建标签 <code>git tag {标签名} -m &quot;说明&quot;</code></li><li>删除本地标签 <code>git tag -d {标签名}</code></li><li>删除远程标签 <code>git push origin --delete {标签名}</code></li><li>为之前的 commit 和 merged 打标签 <code>git tag {标签名} {commit id}</code></li><li>上传标签 <code>git push origin {标签名}</code></li><li>上传所有标签 <code>git push origin --tags</code></li></ul></li></ul><blockquote><p>工作区、暂存区、版本库</p></blockquote><h3 id="代码同步不用验证身份-不账号输入密码" tabindex="-1"><a class="header-anchor" href="#代码同步不用验证身份-不账号输入密码" aria-hidden="true">#</a> 代码同步不用验证身份（不账号输入密码）</h3><ol><li>本地记住密码 <code>git config --global credential.helper store</code></li><li>使用 ssh 密钥 <ol><li>生成密钥 <ul><li>生成 <code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code>(不设置密码可直接 enter)</li><li>查看 <code>cat ~/.ssh/id_rsa.pub</code></li></ul></li><li>设置远程仓库上的公钥，然后验证 <code>ssh -T git@github.com</code></li><li>remote url 选用 git 协议 <code>git remote set-url origin {remote url}</code></li></ol></li></ol>`,5),d=[t];function a(g,r){return e(),l("div",null,d)}const u=i(c,[["render",a],["__file","Git操作笔记.html.vue"]]);export{u as default};
