import{_ as t,M as i,p as c,q as r,R as a,t as e,N as o,a1 as n}from"./framework-5866ffd3.js";const d={},p=a("h1",{id:"微信小程序-swiper-内容高度适配",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#微信小程序-swiper-内容高度适配","aria-hidden":"true"},"#"),e(" 微信小程序 swiper 内容高度适配")],-1),l={href:"https://developers.weixin.qq.com/community/develop/doc/00008aaf4a473056d1c69a8b253c04?highline=%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fswiper%E5%86%85%E5%AE%B9%E9%AB%98%E5%BA%A6%E9%80%82%E9%85%8D",target:"_blank",rel:"noopener noreferrer"},h={href:"https://segmentfault.com/a/1190000014985174",target:"_blank",rel:"noopener noreferrer"},_=n(`<blockquote><p>ps：没有在<code>swiper</code>中添加<code>scroll-view</code>是为了可以使用页面的下拉刷新，最终方法直接跳到方案四。（含代码片段）</p></blockquote><h2 id="初始方案" tabindex="-1"><a class="header-anchor" href="#初始方案" aria-hidden="true">#</a> 初始方案</h2><p><code>swiper</code>高度固定，<code>swiper-item</code>默认绝对定位且宽高 100%，每个<code>swiper-item</code>中内容由固定高度的 child 组成，然后根据 child 数量动态计算<code>swiper</code>高度，初始方案（由于 rpx 针对屏幕宽度进行自适应，<code>child_height</code>使用<code>rpx</code>方便 child 正方形情况下自适应）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>swiper_height <span class="token operator">=</span> child_height <span class="token operator">*</span> child_num<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>屏幕效果仅在宽度 375 的设备（ip6、ipⅩ）完美契合，其他设备都底部会出现多余空隙，并且在上拉加载过程中，随着内容增加，底部空隙也逐渐变大。</p><p><img src="https://img.sinea.cn/wx-sinea-swiper-auto-height-01.gif" alt="wx-sinea-swiper-01"></p><h2 id="方案二" tabindex="-1"><a class="header-anchor" href="#方案二" aria-hidden="true">#</a> 方案二</h2>`,7),u=a("code",null,"rpx",-1),m={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html",target:"_blank",rel:"noopener noreferrer"},g=a("code",null,"child_height",-1),v=a("code",null,"rpx",-1),w=n(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>swiper_height <span class="token operator">=</span> child_height <span class="token operator">*</span> child_num <span class="token operator">*</span> <span class="token punctuation">(</span>window_width <span class="token operator">/</span> <span class="token number">750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),x=a("code",null,"child_height",-1),b=a("code",null,"px",-1),k=a("code",null,"swiper",-1),f=a("code",null,"page",-1),E=a("code",null,"onload",-1),j={href:"https://developers.weixin.qq.com/miniprogram/dev/api/wxml-nodes-info.html#wxcreateselectorquery",target:"_blank",rel:"noopener noreferrer"},B=a("code",null,"baseItemHeight",-1),q=a("code",null,"px",-1),A=n(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>swiper_height <span class="token operator">=</span> baseItemHeight <span class="token operator">*</span> child_num<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果显示原本的 ip6、ipⅩ 没有问题，另外宽带小于 375 的 ip5 上也 ok，但是在大于 375 的设备上还是出现空隙，比如 ip 的 plus 系列。</p><h2 id="方案三" tabindex="-1"><a class="header-anchor" href="#方案三" aria-hidden="true">#</a> 方案三</h2><p>之前的方案都无法计算出合适的<code>swiper</code>高度，那就换个思路，比如去计算空隙的高度。</p><p><code>swiper</code>底部有一个 load 标签显示“加载更多”，该标签紧贴 box 其后，通过<code>wx.createSelectorQuery()</code>来获取<code>bottom</code>，然而你会发现<code>bottom</code>是标签的<code>height</code>加<code>top</code>的和。计算底部空隙（暂时忽略“加载更多”标签高度）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>space_height <span class="token operator">=</span> swiper_height <span class="token operator">-</span> load_top<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>刚计算完可以看到在静止状态下，计算出<code>space_height</code>拿去修改<code>swiper_height</code>显示空隙刚好被清掉了，但是接着就发现在动过程中获取到的<code>bottom</code>是不固定的，也就是说数值可能不准确导致<code>space_height</code>计算错误，显示效果达不到要求。</p><h2 id="方案四" tabindex="-1"><a class="header-anchor" href="#方案四" aria-hidden="true">#</a> 方案四</h2><p>基于上述方案，<code>swiper</code>底部的 load 标签绝对定位<code>bottom:0</code>，同时在<code>swiper</code>底部添加一个高度为 0 并且尾随内容 box 其后的标签（mark），然后获取这两个标签的 top 值之差：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>space_height <span class="token operator">=</span> load_top <span class="token operator">-</span> mark_top<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img.sinea.cn/wx-sinea-swiper-auto-height-02.gif" alt="wx-sinea-swiper-01"></p><p><a href="wechatide://minicode/adphcCm765Z8">代码片段</a></p><p>这次获取到的空隙高度用于再计算<code>swiper</code>高度完美契合，美滋滋！！！</p>`,13);function S(N,y){const s=i("ExternalLinkIcon");return c(),r("div",null,[p,a("ul",null,[a("li",null,[e("文章发布："),a("a",l,[e("微信开放社区"),o(s)])]),a("li",null,[e("文章发布："),a("a",h,[e("SegmentFault"),o(s)])])]),_,a("p",null,[e("开始以为是"),u,e("适配显示问题，后通过文档中描述的"),a("a",m,[e("WXSS 尺寸单位"),o(s)]),e("转化 rpx 为 px（"),g,e("使用"),v,e("）：")]),w,a("p",null,[e("然后并无变化，我们可以看到"),x,e("在不同宽度屏幕下，显示的宽高尺寸是不一样的（"),b,e("单位），那就尝试使用 box 在各个屏幕的实际高度进行计算"),k,e("高度，box 的高度可以单独在页面中增加一个固定标签，该标签样式和 box 宽高保持一致并且隐藏起来，然后在"),f,e("的"),E,e("中通过"),a("a",j,[e("wx.createSelectorQuery()"),o(s)]),e("获取标签实际高度"),B,e("（"),q,e("单位）：")]),A])}const I=t(d,[["render",S],["__file","微信小程序swiper内容高度适配.html.vue"]]);export{I as default};
